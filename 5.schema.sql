-- Generated by Oracle SQL Developer Data Modeler 4.1.5.907


spool ./schema_output.txt

drop sequence CITEM_ITEM_CODE_SEQ;                                                                                                             
drop sequence COMEDI_MEDI_AREA_CODE_SEQ;                                                                                                       
drop sequence COMPETITOR_SALE_ORDER_NUMBER;                                                                                                                                                                                                                
drop sequence COM_COM_NUMBER_SEQ;                                                                                                             
drop sequence ENT_ENTRY_NUMBER_SEQ;                                                                                                            
drop sequence SITEM_ITEM_CODE_SEQ;                                                                                                             
drop sequence VOL_VOL_NUMBER_SEQ;                                                                                                              
drop sequence VSALE_ORDER_NUMBER_SEQ;   
drop
  table carn cascade constraints ;

drop
  table citem cascade constraints ;

drop
  table com cascade constraints ;

drop
  table comedi cascade constraints ;

drop
  table competitor_sale cascade constraints ;

drop
  table cord cascade constraints ;

drop
  table emer cascade constraints ;

drop
  table ent cascade constraints ;

drop
  table eve cascade constraints ;

drop
  table gurd cascade constraints ;

drop
  table sitem cascade constraints ;

drop
  table spon cascade constraints ;

drop
  table team cascade constraints ;

drop
  table vol cascade constraints ;

drop
  table volwork cascade constraints ;

drop
  table vord cascade constraints ;

drop
  table vsale cascade constraints ;

create
  table carn
  (
    --  The particular date when one carnival runs. Assume that only one
    -- carnival
    --  running in a particualr day.
    carn_date date not null ,
    --  The location where one carnival runs. Assume that the location can be
    --  reused over different date for canivals.
    carn_location varchar2 (100 char) not null ,
    --  The director in charge the carnival
    carn_director varchar2 (30 char) not null
  ) ;
alter table carn add constraint carn_pk primary key ( carn_date ) ;


create
  table citem
  (
    --  the item code of the product
    item_code varchar2 (10 char) not null ,
    --  Description of the product
    item_des varchar2 (100) not null ,
    --  cost of the product
    item_cost number (3,2) not null
  ) ;
alter table citem add constraint citem_pk primary key ( item_code ) ;


create
  table com
  (
    --  When a competitor initially registers for Run Monash, they are assigned
    -- a
    --  unique competitor number, which consist of a C followed by four digits
    -- eg
    --  C1122
    com_number char (5 char) not null ,
    --  The first name of the competitor
    com_fname varchar2 (20 char) not null ,
    --  The last name of the competitor
    com_lname varchar2 (20 char) not null ,
    --  The gender of the competitor. "F' stands for female; "M" stands for
    -- male.
    com_gender char (1 char) not null ,
    --  Date of birth for the competitor.
    com_dob date not null ,
    --  The email of the competitor
    com_email varchar2 (25 char) not null ,
    --  Is the competitor a university student, "Y" stands for yes; "N" stands
    -- for
    --  no
    com_unistu char (1 char) not null ,
    --  The mobile number of the competitor (10 digits).
    com_phone char (10 char) not null ,
    --  Does the competitor has medical conditions should be aware of: 'y"
    -- stands
    --  for yes, 'n' stands for no.
    medi_aware char (1 char) not null ,
    --  The relationship betwwen emergency contact person and the competitor:
    -- one
    --  of (parent/guardian/partner/friend).
    emer_relation varchar2 (8 char) not null ,
    --  The last name of competitor's emergency contact
    emer_emer_lname varchar2 (20 char) not null ,
    --  The first name of competitor's emergency contact
    emer_emer_fname varchar2 (20 char) not null ,
    --  The first name of competitor's parent/guardian
    gurd_guard_fname varchar2 (20 char) ,
    --  The last name of competitor's parent/guardian
    gurd_guard_lname varchar2 (20 char)
  ) ;
alter table com add constraint com_pk primary key ( com_number ) ;


create
  table comedi
  (
    --  The medical area belongs to the competitor (1.none/2.breathing/
    --  3.hearing/4. heart/ 5.muscular/ 6.sight/ 7.other/)
    medi_area_code number (1) not null ,
    --  When a competitor initially registers for Run Monash, they are assigned
    -- a
    --  unique competitor number, which consist of a C followed by four digits
    -- eg
    --  C1122
    com_com_number char (5 char) not null
  ) ;
alter table comedi add constraint comedi_pk primary key ( medi_area_code,
com_com_number ) ;


create
  table competitor_sale
  (
    --  unique number of the invoice
    order_number       char (3) not null ,
    order_date         date not null ,
    sale_delivery_mode varchar2 (10 char) ,
    sale_delivery_fee  number (3,2) ,
    --  When a competitor initially registers for Run Monash, they are assigned
    -- a
    --  unique competitor number, which consist of a C followed by four digits
    -- eg
    --  C1122
    com_com_number char (5 char) not null ,
    --  The particular date when one carnival runs. Assume that only one
    -- carnival
    --  running in a particualr day.
    carn_carn_date date not null
  ) ;
comment on column competitor_sale.order_date
is
  'date of order generated' ;
  comment on column competitor_sale.sale_delivery_mode
is
  'pickup or deliver' ;
  comment on column competitor_sale.sale_delivery_fee
is
  'delivery fee, dependent on delivery mode and quantity' ;
alter table competitor_sale add constraint competitor_sale_pk primary key (
order_number ) ;


create
  table cord
  (
    --  unique number of the invoice
    competitor_sale_order_number char (3) not null ,
    --  the item code of the product
    citem_item_code varchar2 (10 char) not null ,
    --  quantity of the bought product
    item_qty number (3) not null ,
    --  linecost = item_qty*item*cost
    item_linecost number (3) not null
  ) ;
alter table cord add constraint item_qty_cstrain check ( item_qty     >0) ;
alter table cord add constraint linecost_cstrain check ( item_linecost>0) ;
alter table cord add constraint cord_pk primary key (
competitor_sale_order_number, citem_item_code ) ;


create
  table emer
  (
    --  The first name of competitor's emergency contact
    emer_fname varchar2 (20 char) not null ,
    --  The last name of competitor's emergency contact
    emer_lname varchar2 (20 char) not null ,
    --  The mobile phone of competitor's emergency contact (10 digits)
    emer_phone char (10 char) not null
  ) ;
alter table emer add constraint emer_pk primary key ( emer_lname, emer_fname )
;


create
  table ent
  (
    --  The assigned entry number for the competitor entering a specifiv
    -- carnival
    --  event. Entry number is unique across all carnival events.
    entry_number char (4 char) not null ,
    --  The time an entrant to finish the event
    entry_time_finished date ,
    --  An entrant's place within an event
    entry_place number (2) ,
    --  The charity an entrant he or she would raise found for
    entry_charity varchar2 (50 char) ,
    --  The specific event a carnival offers
    eve_event_offered char (25 char) not null ,
    --  The particular date when one carnival runs. Assume that only one
    -- carnival
    --  running in a particualr day.
    eve_carn_carn_date date not null ,
    --  When a competitor initially registers for Run Monash, they are assigned
    -- a
    --  unique competitor number, which consist of a C followed by four digits
    -- eg
    --  C1122
    com_com_number char (5 char) not null ,
    --  The assigned entry number for the competitor entering a specifiv
    -- carnival
    --  event. Entry number is unique across all carnival events.
    team_manager_num char (4 char)
  ) ;
alter table ent add constraint ent_pk primary key ( entry_number ) ;


create
  table eve
  (
    --  The specific event a carnival offers
    event_offered char (25 char) not null ,
    --  The particular date when one carnival runs. Assume that only one
    -- carnival
    --  running in a particualr day.
    carn_carn_date date not null
  ) ;
alter table eve add constraint eve_pk primary key ( event_offered,
carn_carn_date ) ;


create
  table gurd
  (
    --  The first name of competitor's parent/guardian
    guard_fname varchar2 (20 char) not null ,
    --  The last name of competitor's parent/guardian
    guard_lname varchar2 (20 char) not null ,
    --  The mobile phone numbe of competitor's guardian
    guard_phone char (10 char) not null
  ) ;
alter table gurd add constraint gurd_pk primary key ( guard_fname, guard_lname
) ;


create
  table sitem
  (
    --  the item code of the product
    item_code varchar2 (10 char) not null ,
    --  Description of the product
    item_des varchar2 (100) not null ,
    --  cost of the product
    item_cost number (3,2) not null
  ) ;
alter table sitem add constraint cost_cstrain check ( item_cost>0) ;
alter table sitem add constraint sitem_pk primary key ( item_code ) ;


create
  table spon
  (
    --  The name of the sponsor company/orgnization/individual
    spon_name varchar2 (30 char) not null ,
    --  Whether the sponsor is the naming sponor for the carnival or not ("y"
    -- or
    --  "n"), "y" indicate the refered sponor is the naming sponor for this
    --  carnival, or vice versa.
    spon_naming char (1 char) not null ,
    --  The amount of money the sponser pay for the carnival
    spon_amount number (7) not null ,
    --  The contact person in sponsor company/organization
    spon_con_person varchar2 (25 char) not null ,
    --  The phone number of the contact person.
    spon_con_phone char (10 char) not null ,
    --  The particular date when one carnival runs. Assume that only one
    -- carnival
    --  running in a particualr day.
    carn_carn_date date not null
  ) ;
alter table spon add constraint spon_pk primary key ( spon_name, carn_carn_date
) ;


create
  table team
  (
    --  The assigned entry number for the competitor entering a specifiv
    -- carnival
    --  event. Entry number is unique across all carnival events.
    manager_num char (4 char) not null ,
    --  The particular date when one carnival runs. Assume that only one
    -- carnival
    --  running in a particualr day.
    carn_carn_date date not null ,
    --  The name of the team,  unique within carnival.
    team_name varchar2 (50 char) not null ,
    --  The number of team members in the team
    team_size number (2) ,
    --  The charity a team would raise fund for
    team_charity varchar2 (50 char)
  ) ;
alter table team add constraint team_pk primary key ( manager_num ) ;


create
  table vol
  (
    --  The unique number assigned to the volunteer: V+3 digits e.g. V123
    vol_number char (4 char) not null ,
    --  The first name of the volunteer
    vol_fname varchar2 (20 char) not null ,
    --  the last name of the volunteer
    vol_lname varchar2 (20 char) not null ,
    --  The volunteer's email adress
    vol_email varchar2 (20 char) not null ,
    --  the volunteer's phone number
    vol_phone char (10 char) not null
  ) ;
alter table vol add constraint vol_pk primary key ( vol_number ) ;


create
  table volwork
  (
    --  The unique number assigned to the volunteer: V+3 digits e.g. V123
    vol_vol_number char (4 char) not null ,
    --  The particular date when one carnival runs. Assume that only one
    -- carnival
    --  running in a particualr day.
    carn_carn_date date not null ,
    --  the role a volunteer assigned to work as in a carnival
    role varchar2 (10 char) ,
    --  Fixed stipend for the carnival an volunteer work
    stipend number (3)
  ) ;
alter table volwork add constraint volwork_pk primary key ( carn_carn_date,
vol_vol_number ) ;


create
  table vord
  (
    --  the unique order number of every sale
    vsale_order_number char (3 char) not null ,
    --  the item code of the product
    sitem_item_code varchar2 (10 char) not null ,
    --  quantity of the bought product
    item_qty number (3) not null ,
    --  linecost = item_qty*item*cost
    item_linecost number (3) not null
  ) ;
alter table vord add constraint vord_pk primary key ( vsale_order_number,
sitem_item_code ) ;


create
  table vsale
  (
    --  the unique order number of every sale
    order_number char (3 char) not null ,
    --  the date when the order is placed
    order_date date not null ,
    --  the delivery mode of the order
    sale_delivery_mode varchar2 (8 char) not null ,
    --  the delivery fee of the order, dependent on delivery mode and quantity
    -- of
    --  the order
    sale_delivery_fee number (4,2) not null ,
    --  The particular date when one carnival runs. Assume that only one
    -- carnival
    --  running in a particualr day.
    carn_carn_date date not null ,
    --  The unique number assigned to the volunteer: V+3 digits e.g. V123
    vol_vol_number char (4 char) not null
  ) ;
alter table vsale add constraint vsale_pk primary key ( order_number ) ;


alter table comedi add constraint comedi_com_fk foreign key ( com_com_number )
references com ( com_number ) on
delete
  cascade ;

alter table competitor_sale add constraint competitor_sale_carn_fk foreign key
( carn_carn_date ) references carn ( carn_date ) on
delete
  cascade ;

alter table competitor_sale add constraint competitor_sale_com_fk foreign key (
com_com_number ) references com ( com_number ) on
delete
  cascade ;

alter table com add constraint com_emer_fk foreign key ( emer_emer_lname,
emer_emer_fname ) references emer ( emer_lname, emer_fname ) ;

alter table com add constraint com_gurd_fk foreign key ( gurd_guard_fname,
gurd_guard_lname ) references gurd ( guard_fname, guard_lname ) ;

alter table cord add constraint cord_citem_fk foreign key ( citem_item_code )
references citem ( item_code ) on
delete
  cascade ;

alter table cord add constraint cord_competitor_sale_fk foreign key (
competitor_sale_order_number ) references competitor_sale ( order_number ) on
delete
  cascade ;

alter table ent add constraint ent_com_fk foreign key ( com_com_number )
references com ( com_number ) ;

alter table ent add constraint ent_eve_fk foreign key ( eve_event_offered,
eve_carn_carn_date ) references eve ( event_offered, carn_carn_date ) ;

alter table ent add constraint ent_team_fk foreign key ( team_manager_num )
references team ( manager_num ) on
delete
  set null ;

alter table eve add constraint eve_carn_fk foreign key ( carn_carn_date )
references carn ( carn_date ) on
delete
  cascade ;

alter table spon add constraint spon_carn_fk foreign key ( carn_carn_date )
references carn ( carn_date ) ;

alter table team add constraint team_carn_fk foreign key ( carn_carn_date )
references carn ( carn_date ) ;

alter table team add constraint team_ent_fk foreign key ( manager_num )
references ent ( entry_number ) ;

alter table volwork add constraint volwork_carn_fk foreign key ( carn_carn_date
) references carn ( carn_date ) on
delete
  cascade ;

alter table volwork add constraint volwork_vol_fk foreign key ( vol_vol_number
) references vol ( vol_number ) ;

alter table vord add constraint vord_sitem_fk foreign key ( sitem_item_code )
references sitem ( item_code ) on
delete
  cascade ;

alter table vord add constraint vord_vsale_fk foreign key ( vsale_order_number
) references vsale ( order_number ) on
delete
  cascade ;

alter table vsale add constraint vsale_carn_fk foreign key ( carn_carn_date )
references carn ( carn_date ) on
delete
  cascade ;

alter table vsale add constraint vsale_vol_fk foreign key ( vol_vol_number )
references vol ( vol_number ) ;

create sequence citem_item_code_seq start with 1 nocache order ;

create sequence com_com_number_seq start with 1 nocache order ;

create sequence comedi_medi_area_code_seq start with 1 nocache order ;

create sequence competitor_sale_order_number start with 1 nocache order ;

create sequence ent_entry_number_seq start with 1 nocache order ;

create sequence sitem_item_code_seq start with 1 nocache order ;

create sequence vol_vol_number_seq start with 1 nocache order ;

create sequence vsale_order_number_seq start with 1 nocache order ;

spool off

-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            17
-- CREATE INDEX                             0
-- ALTER TABLE                             40
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          8
-- CREATE MATERIALIZED VIEW                 0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
